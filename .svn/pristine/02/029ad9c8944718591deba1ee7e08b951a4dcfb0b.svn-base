package kr.or.ddit.board.controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.ddit.board.service.IProdService;
import kr.or.ddit.board.service.ProdServiceImpl;
import kr.or.ddit.board.vo.ProdVO;


@WebServlet("/paging")
public class PagingController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public PagingController() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		int currentPage = 1; //현재 페이지
		currentPage = request.getParameter("page") == null ? 1 : Integer.parseInt(request.getParameter("page"));
		
		//전제 글 갯수 가져오기 위해 서비스객체얻기
		IProdService boardService = ProdServiceImpl.getInstance();
		
		//전체 글 갯수 가져오기
		int countList = boardService.countList(); //20
		//System.out.println("넘어온 글 갯수 : " + countList);

		//화면에 표시될 페이지의 수
		int perPage = 3;
		
		//한 페이지 당 출력할 글 갯수
		int perList = 5;
		
		//◆전체 페이지 수 = 전체 글 갯수(countList) / 페이지 당 글 갯수(perList)
		// double형 변환으로 정확한 값을 도출해야 함
		int totalPage = (int)Math.ceil((double)countList / (double)perList);  
		//System.out.println("전체 페이지 수 : " + totalPage);
		
		//◆페이지 당 출력할 게시글의 범위(start ~ end) 값 구하기
		//start = (currentPage - 1) * perList + 1;
		// 1페이지 일때 : (1-1)*5+1 = 1   |  2페이지 일때 : (2-1)*5+1 = 6
		// 3페이지 일때 : (3-1)*5+1 = 11  |  4페이지 일때 : (4-1)*5+1 = 16
		int start = (currentPage - 1) * perList + 1; //1

		//end = start + perList - 1;
		// 1페이지 일때 : 1+5-1 = 5    |  2페이지 일때 : 6+5-1 = 10
		// 3페이지 일때 : 11+5-1 = 15  |  4페이지 일때 : 16+5-1 = 20
		// ★5페이지 일때 : 21+5-1 = 25
		int end = start + perList - 1;
		if(end > countList) end = countList; //★전체 글 갯수를 초과하는 end값을 조절
		
		//◆화면에 표시될 페이지 범위(startPage ~ endPage) 값 구하기
		//startPage = ((currentPage - 1) / perPage * perPage) + 1;
		// 1페이지 일때 : ((1-1)/4*4)+1 = 1  |  4페이지 일때 : ((4-1)/4*4)+1 = 1
		// 7페이지 일때 : ((7-1)/4*4)+1 = 5  |  12페이지 일때 : ((12-1)/4*4)+1 = 9
		int startPage = ((currentPage - 1) / perPage * perPage) + 1; //1
		
		//endPage = startPage + perPage - 1;
		int endPage = startPage + perPage - 1;
		if(endPage > totalPage) endPage = totalPage;
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("start", start);
		map.put("end", end);
		
		
		//범위 별 게시물 가져오기
		List<ProdVO> list = boardService.prodList(map); 
		
		//request에 결과데이터를 담아서 페이지로 전달
		request.setAttribute("list", list);
		request.setAttribute("sPage", startPage);
		request.setAttribute("ePage", endPage);
		request.setAttribute("ttPage", totalPage);
		request.setAttribute("cPage", currentPage);
		request.getRequestDispatcher("index.jsp?page="+currentPage).forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		System.out.println("두포스트");
		doGet(request, response);
	}

}
